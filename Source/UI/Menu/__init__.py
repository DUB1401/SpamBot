from Source.UI.Menu.Keyboards import ReplyKeyboards

from dublib.TelebotUtils.Users import UsersManager
from telebot import TeleBot, types

import shutil

class Decorators:
	"""–ö–æ–ª–ª–µ–∫—Ü–∏—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤."""

	def reply_buttons(bot: TeleBot, users: UsersManager):
		"""
		–ö–æ–ª–ª–µ–∫—Ü–∏—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤: Reply-–∫–Ω–æ–ø–∫–∏.
			bot ‚Äì –±–æ—Ç Telegram;\n
			users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
		"""

		@bot.message_handler(content_types = ["text"], regexp = "‚ùì –ü–æ–º–æ—â—å")
		def Button(Message: types.Message):
			Text = "<i>–î–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–ª—É–∂–∏—Ç –ª–∏—à—å –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º.</i>" + "\n\n"
			Text += "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∞—Å—Å—ã–ª–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π?</b>" + "\n\n"
			Text += "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <i>–°–æ–æ–±—â–µ–Ω–∏–µ</>. –í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –º–µ–Ω—é –∑–∞–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –≤–ª–æ–∂–µ–Ω–∏—è, —Å–ª–µ–¥—É—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º." + "\n\n"
			Text += "2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <i>–í—ã–±–æ—Ä–∫–∞</i> –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel —Å —Ü–µ–ª—è–º–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏." + "\n\n"
			Text += "3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∑–∞–ø—É—Å—Ç–∏–≤ –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª <code>python main.py -c</code>. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–ª—é—á (/start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)." + "\n\n"
			Text += "4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã Telegram –∫–æ–º–∞–Ω–¥–æ–π <code>register</code> –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>mail</code> –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—ã–ª–∫–∏." + "\n\n"
			Text += "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π <a href=\"https://github.com/DUB1401/SpamBot\">GitHub</a>."
			bot.send_message(
				chat_id = Message.chat.id,
				text = Text,
				parse_mode = "HTML",
				disable_web_page_preview = True
			)

		@bot.message_handler(content_types = ["text"], regexp = "‚ùå –ó–∞–∫—Ä—ã—Ç—å")
		def Button(Message: types.Message):
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!",
				reply_markup = types.ReplyKeyboardRemove()
			)

		@bot.message_handler(content_types = ["text"], regexp = "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type(None)
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–ü–µ—Ä–µ—Ö–æ–∂—É –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
				reply_markup = ReplyKeyboards.menu()
			)

		@bot.message_handler(content_types = ["text"], regexp = "‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)

			bot.send_message(
				chat_id = Message.chat.id,
				text = "–ü–∞–Ω–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è.",
				reply_markup = ReplyKeyboards.message(User)
			)

		@bot.message_handler(content_types = ["text"], regexp = "üîé –ü—Ä–æ—Å–º–æ—Ç—Ä")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			
			if not User.get_property("message"):
				bot.send_message(
					chat_id = Message.chat.id,
					text = "–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."
				)
				return
			
			Text = User.get_property("message")
			Attachments = User.get_property("attachments")

			if Attachments:
				MediaGroup = list()
				
				for File in Attachments:
					Path = f"Data/Temp/{User.id}/Attachments/" + File["filename"]

					if File["type"] == "photo": 
						MediaGroup.append(types.InputMediaPhoto(open(Path, "rb"), caption = Text, parse_mode = "HTML"))
						Text = None

					elif File["type"] == "video": 
						MediaGroup.append(types.InputMediaPhoto(open(Path, "rb"), caption = Text, parse_mode = "HTML"))
						Text = None

				bot.send_media_group(
					chat_id = Message.chat.id,
					media = MediaGroup
				)

			else:
				bot.send_message(
					chat_id = Message.chat.id,
					text = Text,
					parse_mode = "HTML"
				)

		@bot.message_handler(content_types = ["text"], regexp = "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type("message")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è. –î–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤—Å–µ —Å—Ç–∏–ª–∏ Telegram.",
				reply_markup = ReplyKeyboards.message(User)
			)

		@bot.message_handler(content_types = ["text"], regexp = "üèûÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type("attachment")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–ª–æ–∂–µ–Ω–∏—è.",
				reply_markup = ReplyKeyboards.media_select()
			)

		@bot.message_handler(content_types = ["text"], regexp = "üñºÔ∏è¬†–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type("image")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.",
				reply_markup = ReplyKeyboards.cancel()
			)

		@bot.message_handler(content_types = ["text"], regexp = "üé¨ –í–∏–¥–µ–æ")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type("video")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥–µ–æ. –£—á—Ç–∏—Ç–µ, —á—Ç–æ —Ä–æ–ª–∏–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–º –±–æ–ª–µ–µ 40 MB –Ω–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞.",
				reply_markup = ReplyKeyboards.cancel()
			)

		@bot.message_handler(content_types = ["text"], regexp = "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_property("attachments", list())
			shutil.rmtree(f"Data/Temp/{User.id}/Attachments")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–í–ª–æ–∂–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã.",
				reply_markup = ReplyKeyboards.message(User)
			)

		@bot.message_handler(content_types = ["text"], regexp = "üë• –í—ã–±–æ—Ä–∫–∞")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type("targets")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ Excel-—Ñ–∞–π–ª —Å –≤–∞—à–µ–π –≤—ã–±–æ—Ä–∫–æ–π. –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –≤–∑—è—Ç—ã –∏–∑ –∫–æ–ª–æ–Ω–æ–∫ <b>Username</b> –∏ <b>Phone number</b>.",
				parse_mode = "HTML"
			)

		@bot.message_handler(content_types = ["text"], regexp = "üö´ –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
		def Button(Message: types.Message):
			User = users.auth(Message.from_user)
			User.set_expected_type("targets")
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
				reply_markup = ReplyKeyboards.message(User)
			)